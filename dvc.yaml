stages:
  load_data:
    cmd: python -m src.load_data --config=params.yaml
    deps:
    - src/getdata/get_data.py
    - src/load_data.py
    - data_given/winequality.csv
    outs:
    - data/raw/winequality.csv

  split_data:
    cmd: python -m src.split_data --config=params.yaml
    deps:
    - src/split_data.py
    - data/raw/winequality.csv
    outs:
    - data/processed/train_winequality.csv
    - data/processed/test_winequality.csv 

  # train_and_evaluate:
  #   cmd: python -m src.train_and_evaluate --config=params.yaml
  #   deps:
  #   - data/processed/train_winequality.csv
  #   - data/processed/test_winequality.csv 
  #   - src/train_and_evaluate.py
  #   params:
  #   - estimators.ElasticNet.params.alpha
  #   - estimators.ElasticNet.params.l1_ratio
  #   metrics:
  #   - report/scores.json:
  #       cache: false
  #   - report/params.json:
  #       cache: false
  #   outs:
  #   - saved_models/model.joblib